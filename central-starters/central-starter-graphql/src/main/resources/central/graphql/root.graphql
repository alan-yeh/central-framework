"""
标量
"""
scalar Any
scalar Timestamp
scalar Long

# 其他的 Service 注入的 Query 会合并到这里
type Query { }

# 其他的 Service 注入的 Mutation 会合并到这里
type Mutation { }

# GraphQL 入口
schema {
    query:        Query
    mutation:     Mutation
}

# 实体基本属性
interface Entity {
    id:           ID!         # 主键
    creatorId:    String!     # 数据创建人
    createDate:   Timestamp!  # 数据创建时间
}

# 范围
type Range {
    includes:     [String]    # 包括指定范围
    excludes:     [String]    # 排除指定范围
}

# 范围输入
input RangeInput {
    includes:     [String]    # 包括指定范围
    excludes:     [String]    # 排除指定范围
}

# 键值对
type CodeValue {
    code:         String!     # 键
    value:        String      # 值
}

# 键值对输入
input CodeValueInput {
    code:         String      # 键
    value:        String      # 值
}

interface Codeable {
    code:         String!     # 可设置标识
}

# 可修改属性
interface Modifiable {
    modifierId:   String!     # 数据修改人
    modifyDate:   Timestamp!  # 数据修改时间
}

# 可版本化的
interface Versional {
    version:      Int!        # 数据版本
}

# 可软删除的
interface Deletable {
    deleted:      Boolean!    # 是否已删除
}

# 可禁用的
interface Available {
    enabled:      Boolean!    # 是否已启用
}

# 可排序的
interface Orderable {
    order:        Int!        # 排序号，排序号越大排序越前
}

# 分页信息
type Pager {
    pageIndex:    Long!       # 当前分页下标
    pageSize:     Long!       # 分页大小
    pageCount:    Long!       # 分页数量
    itemCount:    Long!       # 数据数量
}

# 分页实体
type Page {
    data:        [Entity]!    # 数据列表
    pager:        Pager!      # 分页信息
}

# 筛选条件输入
input ConditionInput {
    id:           String      # 条件标识
    parentId:     String      # 父条件标识
    order:        Int         # 排序号
    connector:    String      # 与上一个条件的连接符 AND/OR
    type:         String      # 类型 GROUP/CONDITION
    property:     String      # 属性名
    operator:     String      # 操作符
    values:      [Any]        # 值
}

# 排序条件输入
input OrderInput {
    property:     String!     # 属性名
    desc:         Boolean     # 是否倒序
}